// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Exportador_FUMIT
{


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FumitContext : System.Data.Entity.DbContext, IFumitContext
    {
        public System.Data.Entity.DbSet<Activos36> Activos36 { get; set; } // Activos$
        public System.Data.Entity.DbSet<CicloFacturacionCliente> CicloFacturacionClientes { get; set; } // CicloFacturacionCliente
        public System.Data.Entity.DbSet<CiclosFacturacion> CiclosFacturacions { get; set; } // CiclosFacturacion
        public System.Data.Entity.DbSet<Cliente> Clientes { get; set; } // Clientes
        public System.Data.Entity.DbSet<Contacto> Contactoes { get; set; } // Contactos
        public System.Data.Entity.DbSet<Evento> Eventoes { get; set; } // Eventos
        public System.Data.Entity.DbSet<HistorialCliente> HistorialClientes { get; set; } // HistorialCliente
        public System.Data.Entity.DbSet<ProgramacionServicio> ProgramacionServicios { get; set; } // ProgramacionServicios
        public System.Data.Entity.DbSet<ProgramacionServiciosCliente> ProgramacionServiciosClientes { get; set; } // ProgramacionServiciosClientes
        public System.Data.Entity.DbSet<Servicio> Servicios { get; set; } // Servicios
        public System.Data.Entity.DbSet<ServiciosProgramado> ServiciosProgramadoes { get; set; } // ServiciosProgramados
        public System.Data.Entity.DbSet<ServiciosSucursale> ServiciosSucursales { get; set; } // ServiciosSucursales
        public System.Data.Entity.DbSet<Sucursale> Sucursales { get; set; } // Sucursales

        static FumitContext()
        {
            System.Data.Entity.Database.SetInitializer<FumitContext>(null);
        }

        public FumitContext()
            : base("Name=FUMIT")
        {
        }

        public FumitContext(string connectionString)
            : base(connectionString)
        {
        }

        public FumitContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public FumitContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public FumitContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new Activos36Configuration());
            modelBuilder.Configurations.Add(new CicloFacturacionClienteConfiguration());
            modelBuilder.Configurations.Add(new CiclosFacturacionConfiguration());
            modelBuilder.Configurations.Add(new ClienteConfiguration());
            modelBuilder.Configurations.Add(new ContactoConfiguration());
            modelBuilder.Configurations.Add(new EventoConfiguration());
            modelBuilder.Configurations.Add(new HistorialClienteConfiguration());
            modelBuilder.Configurations.Add(new ProgramacionServicioConfiguration());
            modelBuilder.Configurations.Add(new ProgramacionServiciosClienteConfiguration());
            modelBuilder.Configurations.Add(new ServicioConfiguration());
            modelBuilder.Configurations.Add(new ServiciosProgramadoConfiguration());
            modelBuilder.Configurations.Add(new ServiciosSucursaleConfiguration());
            modelBuilder.Configurations.Add(new SucursaleConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new Activos36Configuration(schema));
            modelBuilder.Configurations.Add(new CicloFacturacionClienteConfiguration(schema));
            modelBuilder.Configurations.Add(new CiclosFacturacionConfiguration(schema));
            modelBuilder.Configurations.Add(new ClienteConfiguration(schema));
            modelBuilder.Configurations.Add(new ContactoConfiguration(schema));
            modelBuilder.Configurations.Add(new EventoConfiguration(schema));
            modelBuilder.Configurations.Add(new HistorialClienteConfiguration(schema));
            modelBuilder.Configurations.Add(new ProgramacionServicioConfiguration(schema));
            modelBuilder.Configurations.Add(new ProgramacionServiciosClienteConfiguration(schema));
            modelBuilder.Configurations.Add(new ServicioConfiguration(schema));
            modelBuilder.Configurations.Add(new ServiciosProgramadoConfiguration(schema));
            modelBuilder.Configurations.Add(new ServiciosSucursaleConfiguration(schema));
            modelBuilder.Configurations.Add(new SucursaleConfiguration(schema));
            return modelBuilder;
        }
    }
}
// </auto-generated>
