// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace FUMIT.Entidades
{
    using System.ComponentModel;
    using System.Runtime.Serialization;

    // Tickets
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TicketConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Ticket>
    {
        public TicketConfiguration()
            : this("dbo")
        {
        }

        public TicketConfiguration(string schema)
        {
            ToTable("Tickets", schema);
            HasKey(x => x.TicketId);

            Property(x => x.TicketId).HasColumnName(@"TicketId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ServicioProgramadoId).HasColumnName(@"ServicioProgramadoId").HasColumnType("int").IsRequired();
            Property(x => x.Folio).HasColumnName(@"Folio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
            Property(x => x.NumeroServicios).HasColumnName(@"NumeroServicios").HasColumnType("int").IsRequired();
            Property(x => x.ClienteId).HasColumnName(@"ClienteId").HasColumnType("int").IsRequired();
            Property(x => x.Unidad).HasColumnName(@"Unidad").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.OperadorId).HasColumnName(@"OperadorId").HasColumnType("int").IsOptional();
            Property(x => x.AyudanteId).HasColumnName(@"AyudanteId").HasColumnType("int").IsOptional();
            Property(x => x.HoraEntrada).HasColumnName(@"HoraEntrada").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.Horasalida).HasColumnName(@"Horasalida").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(5);
            Property(x => x.Observaciones).HasColumnName(@"Observaciones").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.Borrado).HasColumnName(@"Borrado").HasColumnType("bit").IsRequired();
            Property(x => x.ServicioId).HasColumnName(@"ServicioId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.Ayudante).WithMany(b => b.Tickets_AyudanteId).HasForeignKey(c => c.AyudanteId).WillCascadeOnDelete(false); // FK_Tickets_Operadores1
            HasOptional(a => a.Operador).WithMany(b => b.Tickets_OperadorId).HasForeignKey(c => c.OperadorId).WillCascadeOnDelete(false); // FK_Tickets_Operadores
            HasRequired(a => a.Clientes).WithMany(b => b.Tickets).HasForeignKey(c => c.ClienteId).WillCascadeOnDelete(false); // FK_Tickets_Clientes
            HasRequired(a => a.Servicio).WithMany(b => b.Tickets).HasForeignKey(c => c.ServicioId).WillCascadeOnDelete(false); // FK_Tickets_Servicios
            HasRequired(a => a.Serviciosprogramado).WithMany(b => b.Tickets).HasForeignKey(c => c.ServicioProgramadoId).WillCascadeOnDelete(false); // FK_Tickets_ServiciosProgramados
        }
    }

}
// </auto-generated>
